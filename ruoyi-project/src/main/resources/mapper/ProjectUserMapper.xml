<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.project.mapper.ProjectUserMapper">
    
    <resultMap type="ProjectUserList" id="ProjectUserResult">
        <result property="id"    column="id"    />
        <result property="userId"    column="user_id"    />
        <result property="projectId"    column="project_id"    />
        <result property="projectName"    column="project_name"    />
        <result property="procInsId"    column="proc_ins_id"    />
    </resultMap>

    <sql id="selectProjectUserVo">
        select id, user_id, project_id, project_name, proc_ins_id from project_user
    </sql>


    <select id="selectProjectUserList" parameterType="ProjectUserList" resultMap="ProjectUserResult">
        <include refid="selectProjectUserVo"/>
        <where>  
            <if test="userId != null "> and user_id = #{userId}</if>
            <if test="projectId != null "> and project_id = #{projectId}</if>
            <if test="projectName != null  and projectName != ''"> and project_name like concat('%', #{projectName}, '%')</if>
            <if test="procInsId != null  and procInsId != ''"> and proc_ins_id = #{procInsId}</if>
        </where>
    </select>

    <select id="selectProjectUserListByProcId" parameterType="ProjectUserList" resultMap="ProjectUserResult">
        <include refid="selectProjectUserVo"/>
        <where>
            <if test="userId != null "> and user_id = #{userId}</if>
            <if test="projectId != null "> and project_id = #{projectId}</if>
            <if test="projectName != null  and projectName != ''"> and project_name like concat('%', #{projectName}, '%')</if>
            <if test="procInsId != null  and procInsId != ''"> and proc_ins_id = #{procInsId}</if>
        </where>
    </select>
    
    <select id="selectProjectUserById" parameterType="Long" resultMap="ProjectUserResult">
        <include refid="selectProjectUserVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertProjectUser" parameterType="ProjectUserList" useGeneratedKeys="true" keyProperty="id">
        insert into project_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">user_id,</if>
            <if test="projectId != null">project_id,</if>
            <if test="projectName != null">project_name,</if>
            <if test="procInsId != null">proc_ins_id,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">#{userId},</if>
            <if test="projectId != null">#{projectId},</if>
            <if test="projectName != null">#{projectName},</if>
            <if test="procInsId != null">#{procInsId},</if>
        </trim>
    </insert>

    <update id="updateProjectUser" parameterType="ProjectUserList">
        update project_user
        <trim prefix="SET" suffixOverrides=",">
            <if test="userId != null">user_id = #{userId},</if>
            <if test="projectId != null">project_id = #{projectId},</if>
            <if test="projectName != null">project_name = #{projectName},</if>
            <if test="procInsId != null">proc_ins_id = #{procInsId},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteProjectUserById" parameterType="Long">
        delete from project_user where id = #{id}
    </delete>

    <delete id="deleteProjectUser" parameterType="Long">
        delete from project_user where project_id = #{param1} and user_id=#{param2}
    </delete>

    <delete id="deleteProjectUserByIds" parameterType="String">
        delete from project_user where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <delete id="deleteProjectUserByProc" parameterType="string">
        delete from project_user where proc_ins_id = #{procInsId}
    </delete>
</mapper>